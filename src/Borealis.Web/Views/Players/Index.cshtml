@model PlayersIndexViewModel

@{
    ViewData["Title"] = "Players";

    string AsJson(object obj)
    {
        return System.Text.Json.JsonSerializer.Serialize(obj, new System.Text.Json.JsonSerializerOptions {
            PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase,
            WriteIndented = false
        });
    }
}
<div id="players-index-page">
    <div>
        <h1 class="display-4">Players</h1>
    </div>

    <a asp-action="AddPlayers" class="btn btn-primary btn-sm mb-3">Add players</a>

    <form method="get">
        <input type="hidden" name="pageIndex" value="@Model.PageIndex" />
        <input type="hidden" name="pageSize" value="@Model.PageSize" />
        <div class="input-group mb-3">
            <input type="text" class="form-control" name="query" placeholder="Search" value="@Model.Query" />
            <div class="input-group-text">
                <input class="form-check-input mt-0" type="checkbox" name="ShowAll" value="True" checked="@Model.ShowAll" title="Search all players">
            </div>
            <button class="btn btn-outline-secondary" type="submit">Search</button>
        </div>
    </form>

    <p>Results: @Model.TotalCount</p>

    <players-table players="@(AsJson(Model.Players))"></players-table>

    <ul class="pagination justify-content-center">
        @if(Model.HasPreviousPage) {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-pageSize="@Model.PageSize" asp-route-Query="@Model.Query" asp-route-ShowAll="@Model.ShowAll">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="visually-hidden">Previous</span>
                </a>
            </li>
        } else {
            <li class="page-item disabled">
                <span class="page-link">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="visually-hidden">Previous</span>
                </span>
            </li>
        }

        @for(var i = 0; i <= Model.TotalPages - 1; i++) {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@i" asp-route-pageSize="@Model.PageSize" asp-route-Query="@Model.Query" asp-route-ShowAll="@Model.ShowAll">@(i + 1)</a>
            </li>
        }

        @if(Model.HasNextPage) {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-pageSize="@Model.PageSize" asp-route-Query="@Model.Query" asp-route-ShowAll="@Model.ShowAll">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="visually-hidden">Next</span>
                </a>
            </li>
        } else {
            <li class="page-item disabled">
                <span class="page-link">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="visually-hidden">Next</span>
                </span>
            </li>
        }
    </ul>
</div>
