@model PlayersDetailsViewModel

@{
    ViewData["Title"] = "Player details";
}

<h1 class="display-4">
    @if(Model.Player.HasFireCrystalFurnace) {
        <span class="furnace-level level-@Model.Player.FurnaceLevelString.ToLowerInvariant()">
            <span class="level-text">@Model.Player.FurnaceLevelString</span>
        </span>
    }

    @Model.Player.Name
</h1>

<a asp-action="Index" class="btn btn-primary btn-sm mb-3">Go back</a>

<div class="row">
    <div class="col-12 col-md-6">
        <dl class="row">
            <dt class="col-sm-3">Player ID</dt>
            <dd class="col-sm-9">@Model.Player.ExternalId</dd>

            <dt class="col-sm-3">State</dt>
            <dd class="col-sm-9">@Model.Player.State</dd>

            <dt class="col-sm-3">Exact furnace level</dt>
            <dd class="col-sm-9">@Model.Player.ExactFurnaceLevelString</dd>

            <dt class="col-sm-3">In alliance</dt>
            <dd class="col-sm-9">@(Model.Player.IsInAlliance ? "Yes" : "No")</dd>

            <dt class="col-sm-3">Is muted</dt>
            <dd class="col-sm-9">@(Model.Player.IsMuted ? "Yes" : "No")</dd>

            @if(!Model.Player.IsInAlliance) {
                <dt class="col-sm-3">Redeem gift codes (even if not in alliance)</dt>
                <dd class="col-sm-9">@(Model.Player.ForceRedeemGiftCodes ? "Yes" : "No")</dd>
            }

            @if(Model.Player.AwayUntil is not null)
            {
                <dt class="col-sm-3">Away until</dt>
                <dd class="col-sm-9">@Model.Player.AwayUntil</dd>
            }

            <dt class="col-sm-3">Created at</dt>
            <dd class="col-sm-9">@Model.Player.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</dd>

            <dt class="col-sm-3">Updated at</dt>
            <dd class="col-sm-9">@Model.Player.UpdatedAt.ToString("yyyy-MM-dd HH:mm:ss")</dd>
        </dl>
    </div>

    <form method="post" enctype="application/x-www-form-urlencoded">
        <input type="hidden" name="Notes" value="@Model.Notes" />
        <div class="mb-3">
            <label for="away-until" class="form-label">Away until</label>
            <input type="date" class="form-control" id="away-until" name="AwayUntil" value="@Model.Player.AwayUntil" />
        </div>

        <button type="submit" class="btn btn-primary mb-3">Save away date</button>
    </form>

    <form method="post" enctype="application/x-www-form-urlencoded">
        <input type="hidden" name="AwayUntil" value="@Model.AwayUntil" />
        <div class="mb-3">
            <label for="notes" class="form-label">Notes</label>
            <textarea class="form-control" id="notes" name="Notes" rows="6">@Model.Player.Notes</textarea>
        </div>

        <button type="submit" class="btn btn-primary mb-3">Save notes</button>
    </form>

    <h2>Redeemed gift codes</h2>

    @if(!Model.RedeemedGiftCodes.Any()) {
        <p>No gift codes redeemed</p>
    } else {
        <div class="table-responsive">
            <table class="table table-responsive table-striped table-hover players-table">
                <thead>
                    <tr>
                        <th class="code">Code</th>
                        <th class="redeemed-at">Redeemed at</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var giftCode in Model.RedeemedGiftCodes)
                    {
                        <tr>
                            <td><a asp-controller="GiftCode" asp-action="Details" asp-route-id="@giftCode.GiftCode.Id">@giftCode.GiftCode.Code</a></td>
                            <td>@giftCode.RedeemedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <h2>Previous names</h2>

    @if(!Model.Player.PreviousNames.Any()) {
        <p>No previous names recorded</p>
    } else {
        <div class="table-responsive">
            <table class="table table-responsive table-striped table-hover players-table">
                <thead>
                    <tr>
                        <th class="code">Previous name</th>
                        <th class="redeemed-at">Changed at</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var previousName in Model.Player.PreviousNames)
                    {
                        <tr>
                            <td>@previousName.Name</td>
                            <td>@previousName.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <h2>Previous states</h2>

    @if(!Model.Player.PreviousStates.Any()) {
        <p>No previous states recorded</p>
    } else {
        <div class="table-responsive">
            <table class="table table-responsive table-striped table-hover players-table">
                <thead>
                    <tr>
                        <th class="code">Previous state</th>
                        <th class="redeemed-at">Changed at</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var previousState in Model.Player.PreviousStates)
                    {
                        <tr>
                            <td>@previousState.State</td>
                            <td>@previousState.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

</div>
