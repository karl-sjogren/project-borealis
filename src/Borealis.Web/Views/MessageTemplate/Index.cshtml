@model MessageTemplateIndexViewModel

@{
    ViewData["Title"] = "Message templates";
}

<div>
    <h1 class="display-4">Message templates</h1>
</div>

<a asp-action="New" class="btn btn-primary btn-sm mb-3">Create Message template</a>

<form method="get">
    <input type="hidden" name="pageIndex" value="@Model.PageIndex" />
    <input type="hidden" name="pageSize" value="@Model.PageSize" />
    <div class="input-group mb-3">
        <input type="text" class="form-control" name="query" placeholder="Search" value="@Model.Query" />
        <button class="btn btn-outline-secondary" type="submit">Search</button>
    </div>
</form>

<p>Results: @Model.TotalCount</p>

<div class="table-responsive">
    <table class="table table-striped table-hover players-table">
        <thead>
            <tr>
                <th class="user-name">Name</th>
                <th class="message">Message</th>
                <th class="updated-at">Updated at</th>
                <th class="actions"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var messageTemplate in Model.MessageTemplates) {
                <tr id="user-@messageTemplate.Id">
                    <td>@messageTemplate.Name</td>
                    <td>@messageTemplate.Message</td>
                    <td>@messageTemplate.UpdatedAt</td>
                    <td>
                        <div class="btn-group btn-group-sm" role="group" aria-label="Actions for user @messageTemplate.Name">
                        <a class="btn btn-primary" asp-action="Details" asp-route-id="@messageTemplate.Id"><i class="bi bi-pencil"></i></a>

                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#"><i class="bi bi-trash"></i> Delete</a></li>
                            </ul>
                        </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<ul class="pagination justify-content-center">
    @if(Model.HasPreviousPage) {
        <li class="page-item">
            <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-pageSize="@Model.PageSize" asp-route-Query="@Model.Query">
                <span aria-hidden="true">&laquo;</span>
                <span class="visually-hidden">Previous</span>
            </a>
        </li>
    } else {
        <li class="page-item disabled">
            <span class="page-link">
                <span aria-hidden="true">&laquo;</span>
                <span class="visually-hidden">Previous</span>
            </span>
        </li>
    }

    @for(var i = 0; i <= Model.TotalPages - 1; i++) {
        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
            <a class="page-link" asp-action="Index" asp-route-pageIndex="@i" asp-route-pageSize="@Model.PageSize" asp-route-Query="@Model.Query">@(i + 1)</a>
        </li>
    }

    @if(Model.HasNextPage) {
        <li class="page-item">
            <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-pageSize="@Model.PageSize" asp-route-Query="@Model.Query">
                <span aria-hidden="true">&raquo;</span>
                <span class="visually-hidden">Next</span>
            </a>
        </li>
    } else {
        <li class="page-item disabled">
            <span class="page-link">
                <span aria-hidden="true">&raquo;</span>
                <span class="visually-hidden">Next</span>
            </span>
        </li>
    }
</ul>
